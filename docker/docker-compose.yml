services:
  minio:
    image: quay.io/minio/minio:RELEASE.2024-07-26T20-48-21Z
    command: server /data --console-address ":9090"
    ports:
      - "9000:9000"   # S3 API
      - "9090:9090"   # MinIO Console
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - minio-data:/data

  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - pg-data:/var/lib/postgresql/data

  airflow:
    image: apache/airflow:2.9.3
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: dev
      AIRFLOW__CORE__FERNET_KEY: "youshouldsetthis"
      DATA_ROOT: ${DATA_ROOT}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      S3A_PATH_STYLE: ${S3A_PATH_STYLE}
    command: >
      bash -c "
      airflow db upgrade &&
      airflow users create --username admin --password admin --firstname a --lastname a --role Admin --email a@a.a || true &&
      airflow webserver & airflow scheduler
      "
    ports:
      - "8080:8080"
    volumes:
      - ../dags:/opt/airflow/dags
      - ../pipelines:/opt/airflow/pipelines
      - ../.env:/opt/airflow/.env
    env_file:
      - ../.env

  spark:
    build:
      context: ..
      dockerfile: docker/Dockerfile.spark
    depends_on:
      - minio
    environment:
      DATA_ROOT: ${DATA_ROOT}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
      S3A_PATH_STYLE: ${S3A_PATH_STYLE}
    volumes:
      - ../pipelines:/opt/project/pipelines
      - ../.env:/opt/project/.env
    command: bash -c "tail -f /dev/null"
    ports:
      - "4040:4040"   # Spark UI
    tty: true

volumes:
  minio-data:
  pg-data:
